// var mongoose = require("mongoose");
var rides = require('config/ridemodel');
var crypto = require('crypto');

exports.addride = function(time,origin,destination,date,millis,freeSpace,totalseats,only_girls,price,transport_mode,transport_mode_info,callback) {
	 	// console.log(starttime,origin,end,date,millis,availableseats,totalseats,onlygirls,price,mode,modeinfo,callback);
	 	if (true) {
			var ridecode = crypto.createHash('sha512');

//Creates a new ride with all the parameters send by the user .
			var newride = new rides({
				
			  	admin_name:"skbhu@iitk",
				ridecode:"hef874vurkdbc212bhjh2h2h",
				time:time,
				origin:origin,
				date:date,
				destination:destination,
				millis:millis,
				freeSpace:freeSpace,
				totalseats:totalseats,
				only_girls:only_girls,
				price:price,
				transport_mode:transport_mode,
				transport_mode_info:transport_mode_info,
				riders:["skbhu@iitk","dangi@iitk","sundar@iitk"] 
			   });

			    newride.save(function (err) {
			    	console.log(err);
			    callback({'response':"Ride Sucessfully Registered"});
			 
			});
			// }
			// else{
			 
			//     callback({'response':"Ride already Registered"});
			 
			// }
		// });
		}

}
 
   
//         app.get('/api', function(req, res) {
//             var message = new gcm.Message();

//             // ... or some given values
//             var message = new gcm.Message({
//                 collapseKey: 'demo',
//                 priority: 3,
//                 contentAvailable: true,
//                 delayWhileIdle: true,
//                 timeToLive: 3,
//                 restrictedPackageName: "somePackageName",
//                 dryRun: true,
//                 data: {
//                     key1: 'message1',
//                     key2: 'message2'
//                 },
//                 notification: {
//                     title: "Hello, World",
//                     icon: "ic_launcher",
//                     body: "This is a notification that will be displayed ASAP."
//                 }
//             });

//             // Change the message data
//             // ... as key-value
//             message.addData('key1','message1');
//             message.addData('key2','message2');

//             // ... or as a data object (overwrites previous data object)
//             message.addData({
//                 key1: 'message1',
//                 key2: 'message2'
//             });

//             // Set up the sender with you API key
//             var sender = new gcm.Sender('insert Google Server API Key here');

//             // Add the registration IDs of the devices you want to send to
//             var registrationIds = [];
//             registrationIds.push('regId1');
//             registrationIds.push('regId2');

//             // Send the message
//             // ... trying only once
//             sender.sendNoRetry(message, registrationIds, function(err, result) {
//               if(err) console.error(err);
//               else    console.log(result);
//             });

//             // ... or retrying
//             sender.send(message, registrationIds, function (err, result) {
//               if(err) console.error(err);
//               else    console.log(result);
//             });

//             // ... or retrying a specific number of times (10)
//             sender.send(message, registrationIds, 10, function (err, result) {
//               if(err) console.error(err);
//               else    console.log(result);
//             });  
//         res.end("share-push notification sent");
//     });
    
//         // NB! No need to recreate the transporter object. You can use 
//         // the same transporter object for all e-mails 
         
//         // setup e-mail data with unicode symbols 
//         var mailOptions = {
//             from: 'Shashank bhushan ✔ <shashankkishu@gmail.com>', // sender address 
//             to: 'shashankkishu@gmail.com', // list of receivers 
//             subject: 'Hello ✔', // Subject line 
//             text: 'Hello world ✔', // plaintext body 
//             html: '<b>Hello world ✔</b>' // html body 
//         };
         
//         // send mail with defined transport object 
//         transporter.sendMail(mailOptions, function(error, info){
//             if(error){
//                 return console.log(error);
//             }
//             console.log('Message sent: ' + info.response);
 
// });